{"ast":null,"code":"var _jsxFileName = \"/home/adilmohamedparayil/admin/admin/src/SidebarContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SidebarContext = /*#__PURE__*/createContext();\n\n// Create a custom hook to use the sidebar context\nexport const useSidebar = () => {\n  _s();\n  return useContext(SidebarContext);\n};\n\n// Create the provider component\n_s(useSidebar, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SidebarProvider = ({\n  children\n}) => {\n  _s2();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      isSidebarOpen,\n      toggleSidebar\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s2(SidebarProvider, \"hhELji5FF40EWubpyG3MvXv6UnA=\");\n_c = SidebarProvider;\nvar _c;\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SidebarContext","useSidebar","_s","SidebarProvider","children","_s2","isSidebarOpen","setIsSidebarOpen","toggleSidebar","prevState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/adilmohamedparayil/admin/admin/src/SidebarContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nexport const SidebarContext = createContext();\n\n// Create a custom hook to use the sidebar context\nexport const useSidebar = () => useContext(SidebarContext);\n\n// Create the provider component\nexport const SidebarProvider = ({ children }) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prevState => !prevState);\n  };\n\n  return (\n    <SidebarContext.Provider value={{ isSidebarOpen, toggleSidebar }}>\n      {children}\n    </SidebarContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMM,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,cAAc,CAAC;AAAA;;AAE1D;AAAAE,EAAA,CAFaD,UAAU;AAGvB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BD,gBAAgB,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC;EAC3C,CAAC;EAED,oBACEV,OAAA,CAACC,cAAc,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEL,aAAa;MAAEE;IAAc,CAAE;IAAAJ,QAAA,EAC9DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACV,GAAA,CAZWF,eAAe;AAAAa,EAAA,GAAfb,eAAe;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}