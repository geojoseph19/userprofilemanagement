{"ast":null,"code":"var _jsxFileName = \"/home/adilmohamedparayil/admin/admin/src/Animations.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './assets/icons/icons8-success.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TypingAnimation({\n  text,\n  speed,\n  initialDelay\n}) {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  useEffect(() => {\n    let index = 0;\n    let delayTimer;\n\n    // Function to start typing after initial delay\n    const startTyping = () => {\n      delayTimer = setInterval(() => {\n        setDisplayText(prevText => {\n          if (index < text.length) {\n            return prevText + text[index++];\n          } else {\n            clearInterval(delayTimer);\n            return prevText;\n          }\n        });\n      }, speed);\n    };\n\n    // Start typing after initial delay\n    const delayTimeout = setTimeout(() => {\n      startTyping();\n    }, initialDelay);\n\n    // Cleanup function\n    return () => {\n      clearTimeout(delayTimeout);\n      clearInterval(delayTimer);\n    };\n  }, [text, speed, initialDelay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_s(TypingAnimation, \"Z72AqRalvcuvuUyHd5OLwsN/cpk=\");\n_c = TypingAnimation;\nconst LottieAnimation = () => {\n  _s2();\n  const container = useRef(null);\n  useEffect(() => {\n    if (container.current) {\n      lottie.loadAnimation({\n        container: container.current,\n        animationData: animationData,\n        renderer: 'svg',\n        // Use SVG renderer\n        loop: true,\n        // Optional\n        autoplay: true // Optional\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s2(LottieAnimation, \"gP936EAkbq44zYYGRnj90r2fLhg=\");\n_c2 = LottieAnimation;\nexport default LottieAnimation;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypingAnimation\");\n$RefreshReg$(_c2, \"LottieAnimation\");","map":{"version":3,"names":["React","useState","useRef","useEffect","lottie","animationData","jsxDEV","_jsxDEV","TypingAnimation","text","speed","initialDelay","_s","displayText","setDisplayText","index","delayTimer","startTyping","setInterval","prevText","length","clearInterval","delayTimeout","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","LottieAnimation","_s2","container","current","loadAnimation","renderer","loop","autoplay","ref","_c2","$RefreshReg$"],"sources":["/home/adilmohamedparayil/admin/admin/src/Animations.js"],"sourcesContent":["import React, { useState,useRef, useEffect } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './assets/icons/icons8-success.json';\n\nexport function TypingAnimation({ text, speed, initialDelay }) {\n  const [displayText, setDisplayText] = useState('');\n\n  useEffect(() => {\n    let index = 0;\n    let delayTimer;\n\n    // Function to start typing after initial delay\n    const startTyping = () => {\n      delayTimer = setInterval(() => {\n        setDisplayText((prevText) => {\n          if (index < text.length) {\n            return prevText + text[index++];\n          } else {\n            clearInterval(delayTimer);\n            return prevText;\n          }\n        });\n      }, speed);\n    };\n\n    // Start typing after initial delay\n    const delayTimeout = setTimeout(() => {\n      startTyping();\n    }, initialDelay);\n\n    // Cleanup function\n    return () => {\n      clearTimeout(delayTimeout);\n      clearInterval(delayTimer);\n    };\n  }, [text, speed, initialDelay]);\n\n  return <div>{displayText}</div>;\n}\n\nconst LottieAnimation = () => {\n  const container = useRef(null);\n\n  useEffect(() => {\n    if (container.current) {\n      lottie.loadAnimation({\n        container: container.current,\n        animationData: animationData,\n        renderer: 'svg', // Use SVG renderer\n        loop: true, // Optional\n        autoplay: true, // Optional\n      });\n    }\n  }, []);\n\n  return <div ref={container}></div>;\n};\n\nexport default LottieAnimation;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzD,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,aAAa,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAO,SAASC,eAAeA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElDE,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,GAAG,CAAC;IACb,IAAIC,UAAU;;IAEd;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBD,UAAU,GAAGE,WAAW,CAAC,MAAM;QAC7BJ,cAAc,CAAEK,QAAQ,IAAK;UAC3B,IAAIJ,KAAK,GAAGN,IAAI,CAACW,MAAM,EAAE;YACvB,OAAOD,QAAQ,GAAGV,IAAI,CAACM,KAAK,EAAE,CAAC;UACjC,CAAC,MAAM;YACLM,aAAa,CAACL,UAAU,CAAC;YACzB,OAAOG,QAAQ;UACjB;QACF,CAAC,CAAC;MACJ,CAAC,EAAET,KAAK,CAAC;IACX,CAAC;;IAED;IACA,MAAMY,YAAY,GAAGC,UAAU,CAAC,MAAM;MACpCN,WAAW,CAAC,CAAC;IACf,CAAC,EAAEN,YAAY,CAAC;;IAEhB;IACA,OAAO,MAAM;MACXa,YAAY,CAACF,YAAY,CAAC;MAC1BD,aAAa,CAACL,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACP,IAAI,EAAEC,KAAK,EAAEC,YAAY,CAAC,CAAC;EAE/B,oBAAOJ,OAAA;IAAAkB,QAAA,EAAMZ;EAAW;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC;AAACjB,EAAA,CAlCeJ,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAoC/B,MAAMuB,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,SAAS,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,IAAI8B,SAAS,CAACC,OAAO,EAAE;MACrB9B,MAAM,CAAC+B,aAAa,CAAC;QACnBF,SAAS,EAAEA,SAAS,CAACC,OAAO;QAC5B7B,aAAa,EAAEA,aAAa;QAC5B+B,QAAQ,EAAE,KAAK;QAAE;QACjBC,IAAI,EAAE,IAAI;QAAE;QACZC,QAAQ,EAAE,IAAI,CAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO/B,OAAA;IAAKgC,GAAG,EAAEN;EAAU;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpC,CAAC;AAACG,GAAA,CAhBID,eAAe;AAAAS,GAAA,GAAfT,eAAe;AAkBrB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}